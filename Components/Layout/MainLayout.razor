@using EstadisticaApp.Utilities
@using Radzen.Blazor

@inherits LayoutComponentBase

@implements IDisposable

@inject NavigationManager Navigation


<RadzenDialog />
<Offcanvas @ref="offcanvasRef" ShowBackdrop Placement="Blazorise.Placement.Start">
     <OffcanvasHeader>
         <Icon Name="IconName.Filter" IconSize="IconSize.Large" Margin="Margin.Is1" />
         Detalles por Unidad Presupuestal
         <CloseButton Clicked="@HideOffcanvas" />
     </OffcanvasHeader>
    <button type="button" class="list-group-item list-group-item-action" onclick="@(()=>Navigation.NavigateTo("/presupuesto/Oficinas Centrales/01"))">Sistema DIF</button>
            <button type="button" class="list-group-item list-group-item-action" onclick="@(()=>Navigation.NavigateTo("/presupuesto/Junta de Asistencia/02"))">Junta de Asistencia</button>
            <button type="button" class="list-group-item list-group-item-action" onclick="@(()=>Navigation.NavigateTo("/presupuesto/Hopital del Niño/03"))">Hospital Del Niño</button>
            <button type="button" class="list-group-item list-group-item-action" onclick="@(()=>Navigation.NavigateTo("/presupuesto/CRIH/04"))">CRIH</button>
            <button type="button" class="list-group-item list-group-item-action" onclick="@(()=>Navigation.NavigateTo("/presupuesto/Procuraduría/05"))">Procuraduría </button>
    
 </Offcanvas>

 <Layout>
     <LayoutHeader>
         <Bar Breakpoint="Blazorise.Breakpoint.Desktop"
              Background="Background.Primary"
              ThemeContrast="ThemeContrast.Light">
             <BarBrand>
                 <Button Clicked="@ShowOffcanvas" TextColor="TextColor.Light">
                     <Icon Name="@("fa-light fa-bars")"  />
               
                 </Button>
             </BarBrand>
             @*Ingreso por Unidades Presupuestales*@
             <Heading Size="HeadingSize.Is3" TextColor="TextColor.White" Class="mx-3"> @title</Heading>
         </Bar>
     </LayoutHeader>
     <LayoutContent>
         @*Style="min-width:30vw;max-width:40vw;"*@
         @Body
    </LayoutContent>
    <LayoutFooter Style="box-shadow: 0px -12px 11px -6px rgba(0,0,0,0.2);">

        <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged" FullWidth="true" Padding="Padding.Is0" Margin="Margin.Is0">
            <Items>
                <Tab Clicked="@(()=>Navigation.NavigateTo("/"))" Name="Home">Ingreso por Unidades presupuestales </Tab>
                <Tab Clicked="@(()=>Navigation.NavigateTo("/presupuesto"))" Name="Preupuesto">Egresos por Unidades presupuestales </Tab>
                @*<Tab Clicked="@(()=>Navigation.NavigateTo("/"))" Name="profile">Mes</Tab>
                <Tab Name="messages">Messages</Tab>
                <Tab Name="settings">Settings</Tab>*@
            </Items>

        </Tabs>

    </LayoutFooter>
</Layout>

@code {
    [Inject]
    private ComponentEvents componentEvents{set;get;}
    //Configuración de texto
    public static string? title { set; get; }
    
    protected override void OnInitialized()
    {
        
        componentEvents.Eventos += EventHandler;
    }
    public void EventHandler(object sender, ServiceTitle stateArguments)
    {
        title = stateArguments.State;
        StateHasChanged();
    }
    public void Dispose()
    {
        componentEvents.Eventos -= EventHandler;
    }
    private Offcanvas offcanvasRef;

    private Task ShowOffcanvas()
    {
        return offcanvasRef.Show();
    }

    private Task HideOffcanvas()
    {
        return offcanvasRef.Hide();
    }

    string selectedTab = "Home";

    private Task OnSelectedTabChanged(string name)
    {
        selectedTab = name;

        return Task.CompletedTask;
    }
    

}
